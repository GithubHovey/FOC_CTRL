#ifndef __MOTOR_PROTOCOL_H__
#define __MOTOR_PROTOCOL_H__

#ifdef __cplusplus
extern "C" {
#endif

/*
 * @brief 电机通信协议说明
 * 
 * 通信角色：
 * - 电机：作为接收端（从设备）
 * - 其他主机：作为发送端（主设备）
 * 
 * 协议包格式：
 * 固定14字节长度，格式如下：
 * 
 * 字节位置: [0]  [1]  [2]  [3]  [4]  [5]  [6]  [7]  [8]  [9]  [10] [11] [12] [13]
 * 字段名称: [包头][命令][        数据区 (10字节)        ][校验][包尾]
 * 示例数据: [AA] [01] [10] [00] [00] [00] [00] [00] [00] [00] [00] [00] [XX] [55]
 * 
 * 详细字段说明：
 * ┌─────┬─────────┬─────────────────────────────────────────────────────┐
 * │字节 │ 字段名  │                    说明                             │
 * ├─────┼─────────┼─────────────────────────────────────────────────────┤
 * │ 0   │ 包头    │ 固定值 0xAA                                        │
 * │ 1   │ 命令字  │ motor_command_t枚举值（如：0x01=写数据，0x02=读数据）│
 * │2-11 │ 数据区  │ 10字节命令相关数据（见下方详细格式）                   │
 * │ 12  │ 校验和  │ 从包头到数据区结束的累加和校验                        │
 * │ 13  │ 包尾    │ 固定值 0x55                                        │
 * └─────┴─────────┴─────────────────────────────────────────────────────┘
*

*
 * @brief 读数据命令（CMD_READ_DATA = 0x02）
 * 
 * 发送包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x02 │ 命令字：读数据                                                         │
 * │ 2   │ID   │ 数据ID（motor_data_id_t枚举值，1字节）                                 │
 * │3-6  │0x00 │ 4字节填充0（数据区，可扩展使用）                                     │
 * │7-11 │0x00 │ 5字节填充0                                                             │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 读数据应答包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x02 │ 命令字：与发送包相同（0x02）                                           │
 * │ 2   │ID   │ 数据ID（与发送包相同，1字节）                                          │
 * │3-6  │DATA │ 4字节返回数据（小端格式）                                              │
 * │7-11 │0x00 │ 5字节填充0                                                             │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 示例：读取当前转速（DATA_ID_SPEED_CURRENT = 0x18）
 * 发送包：AA 02 18 00 00 00 00 00 00 00 00 00 C4 55
 * 应答包：AA 02 18 00 00 80 3F 00 00 00 00 00 83 55  （返回转速1.0f）
*

*
 * @brief 写数据命令（CMD_WRITE_DATA = 0x01）
 * 
 * 发送包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x01 │ 命令字：写数据                                                         │
 * │ 2   │ID   │ 数据ID（motor_data_id_t枚举值，1字节）                                 │
 * │3-6  │DATA │ 4字节写入数据（小端格式）                                              │
 * │7-11 │0x00 │ 5字节填充0                                                             │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 写数据应答包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x01 │ 命令字：与发送包相同（0x01）                                           │
 * │ 2   │ID   │ 数据ID（与发送包相同，1字节）                                          │
 * │3-6  │DATA │ 4字节写入后读取值（理论上与写入值相同，小端格式）                      │
 * │7-11 │0x00 │ 5字节填充0                                                             │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 示例：写入最大电流限制为2.5A（DATA_ID_MAX_CURRENT_LIMIT = 0x1A）
 * 发送包：AA 01 1A 20 40 00 00 00 00 00 00 00 25 55  （写入2.5f）
 * 应答包：AA 01 1A 20 40 00 00 00 00 00 00 00 25 55  （返回2.5f，验证成功）
*

*
 * @brief 启动电机命令（CMD_MOTOR_START = 0x03）
 * 
 * 发送包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x03 │ 命令字：启动电机                                                       │
 * │2-11 │0x00 │ 10字节填充0（无有效数据）                                              │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 启动电机应答包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x03 │ 命令字：与发送包相同（0x03）                                           │
 * │ 2   │STATUS│ 1字节应答状态（ResponseStatus枚举值）                                │
 * │ 3   │STATE │ 1字节电机工作状态（MotorState枚举值）                                │
 * │4-11 │0x00 │ 8字节填充0                                                             │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 示例：启动电机成功（电机进入运行状态）
 * 发送包：AA 03 00 00 00 00 00 00 00 00 00 00 AD 55
 * 应答包：AA 03 00 01 00 00 00 00 00 00 00 00 AE 55  （应答：RESPONSE_OK=0，MOTOR_STATE_RUNNING=1）
 *
 * 示例：启动电机失败（电机保持停止状态）
 * 发送包：AA 03 00 00 00 00 00 00 00 00 00 00 AD 55
 * 应答包：AA 03 04 00 00 00 00 00 00 00 00 00 B1 55  （应答：RESPONSE_MOTOR_START_FAILED=4，MOTOR_STATE_STOPPED=0）
*

*
 * @brief 电机校准命令（CMD_MOTOR_CALIBRATE = 0x0F）
 * 
 * 发送包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x0F │ 命令字：电机校准                                                       │
 * │2-11 │0x00 │ 10字节填充0（无有效数据）                                              │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 电机校准应答包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x0F │ 命令字：与发送包相同（0x0F）                                           │
 * │ 2   │STATUS│ 1字节应答状态（ResponseStatus枚举值）                                │
 * │ 3   │STATE │ 1字节电机工作状态（MotorState枚举值）                                │
 * │4-11 │0x00 │ 8字节填充0                                                             │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 示例：电机校准成功（电机进入校准状态）
 * 发送包：AA 0F 00 00 00 00 00 00 00 00 00 00 B9 55
 * 应答包：AA 0F 00 02 00 00 00 00 00 00 00 00 BB 55  （应答：RESPONSE_OK=0，MOTOR_STATE_CALIBRATING=2）
 * 
 * 示例：电机校准失败（电机保持停止状态）
 * 发送包：AA 0F 00 00 00 00 00 00 00 00 00 00 BB 55
 * 应答包：AA 0F 06 00 00 00 00 00 00 00 00 00 C1 55  （应答：RESPONSE_MOTOR_CALIBRATE_FAILED=6，MOTOR_STATE_STOPPED=0）
*

*
 * @brief 停止电机命令（CMD_MOTOR_STOP = 0x04）
 * 
 * 发送包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x04 │ 命令字：停止电机                                                       │
 * │2-11 │0x00 │ 10字节填充0（无有效数据）                                              │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 停止电机应答包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x04 │ 命令字：与发送包相同（0x04）                                           │
 * │ 2   │STATUS│ 1字节应答状态（ResponseStatus枚举值）                                │
 * │ 3   │STATE │ 1字节电机工作状态（MotorState枚举值）                                │
 * │4-11 │0x00 │ 8字节填充0                                                             │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 示例：停止电机成功（电机进入停止状态）
 * 发送包：AA 04 00 00 00 00 00 00 00 00 00 00 AE 55
 * 应答包：AA 04 00 00 00 00 00 00 00 00 00 00 AE 55  （应答：RESPONSE_OK=0，MOTOR_STATE_STOPPED=0）
 * 
 * 示例：停止电机失败（电机保持运行状态）
 * 发送包：AA 04 00 00 00 00 00 00 00 00 00 00 AE 55
 * 应答包：AA 04 05 01 00 00 00 00 00 00 00 00 B4 55  （应答：RESPONSE_MOTOR_STOP_FAILED=5，MOTOR_STATE_RUNNING=1）
*

*
 * @brief 模式设置命令（CMD_MODE_SET = 0x05）
 * 
 * 发送包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x05 │ 命令字：模式设置                                                       │
 * │ 2   │MODE │ 1字节模式ID（MotorControlMode枚举值）                                │
 * │3-11 │0x00 │ 9字节填充0                                                             │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 模式设置应答包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x05 │ 命令字：与发送包相同（0x05）                                           │
 * │ 2   │STATUS│ 1字节应答状态（ResponseStatus枚举值）                                │
 * │ 3   │MODE │ 1字节当前电机模式ID（MotorControlMode枚举值）                        │
 * │4-11 │0x00 │ 8字节填充0                                                             │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 示例：设置为速度模式（MOTOR_MODE_SPEED = 0x01）
 * 发送包：AA 05 01 00 00 00 00 00 00 00 00 00 B0 55  （设置速度模式）
 * 应答包：AA 05 00 01 00 00 00 00 00 00 00 00 B0 55  （应答：RESPONSE_OK=0，当前模式：速度模式）
 * 
 * 示例：设置为力矩模式（MOTOR_MODE_TORQUE = 0x00）
 * 发送包：AA 05 00 00 00 00 00 00 00 00 00 00 AF 55  （设置力矩模式）
 * 应答包：AA 05 00 00 00 00 00 00 00 00 00 00 AF 55  （应答：RESPONSE_OK=0，当前模式：力矩模式）
*

**
 * @brief 接口模式设置命令（CMD_INTERFACE_MODE_SET = 0x06）
 * 
 * 发送包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x06 │ 命令字：接口模式设置                                                   │
 * │ 2   │MODE │ 1字节接口模式ID（InterfaceType枚举值）                               │
 * │3-11 │0x00 │ 9字节填充0                                                             │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 接口模式设置应答包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x06 │ 命令字：与发送包相同（0x06）                                           │
 * │ 2   │STS  │ 1字节应答状态（ResponseStatus枚举值）                                │
 * │ 3   │MODE │ 1字节当前接口模式ID（InterfaceType枚举值）                           │
 * │4-11 │0x00 │ 8字节填充0                                                             │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 示例：设置为CAN接口模式（INTERFACE_CAN = 0x01）
 * 发送包：AA 06 01 00 00 00 00 00 00 00 00 00 B1 55  （设置CAN接口模式）
 * 应答包：AA 06 00 01 00 00 00 00 00 00 00 00 B0 55  （设置成功，当前接口：CAN）
 * 
 * 示例：设置为UART接口模式（INTERFACE_UART = 0x00）
 * 发送包：AA 06 00 00 00 00 00 00 00 00 00 00 B0 55  （设置UART接口模式）
 * 应答包：AA 06 00 00 00 00 00 00 00 00 00 00 B0 55  （设置成功，当前接口：UART）
 *
*
 * @brief CANID设置命令（CMD_CANID_SET = 0x07）
 * 
 * 发送包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x07 │ 命令字：CANID设置                                                      │
 * │ 2   │ID   │ 1字节CANID                                                             │
 * │3-11 │0x00 │ 9字节填充0                                                             │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * CANID设置应答包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x07 │ 命令字：与发送包相同（0x07）                                           │
 * │ 2   │STS  │ 1字节应答状态（ResponseStatus枚举值）                                │
 * │ 3   │ID   │ 1字节当前CANID                                                         │
 * │4-11 │0x00 │ 8字节填充0                                                             │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 示例：设置CANID为0x12（成功）
 * 发送包：AA 07 12 00 00 00 00 00 00 00 00 00 C3 55  （设置CANID=0x12）
 * 应答包：AA 07 00 12 00 00 00 00 00 00 00 00 B1 55  （应答：RESPONSE_OK=0，当前CANID=0x12）
 * 
 * 示例：设置CANID为0xFF（无效CANID）
 * 发送包：AA 07 FF 00 00 00 00 00 00 00 00 00 B2 55  （设置CANID=0xFF）
 * 应答包：AA 07 01 FF 00 00 00 00 00 00 00 00 B2 55  （应答：RESPONSE_INVALID_CANID=1，当前CANID保持不变）
 *
*
 * @brief 0位设置命令（CMD_ZERO_SET = 0x08）
 * 
 * 发送包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x08 │ 命令字：0位设置                                                        │
 * │ 2   │ANGLE│ 2字节零位角度（int16_t类型，小端格式，单位：0.1度）                    │
 * │3-11 │0x00 │ 9字节填充0                                                             │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 0位设置应答包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x08 │ 命令字：与发送包相同（0x08）                                           │
 * │ 2   │STS  │ 1字节应答状态（ResponseStatus枚举值）                                │
 * │3-4  │ANGLE│ 2字节当前零位角度（int16_t类型，小端格式，单位：0.1度）              │
 * │5-11 │0x00 │ 7字节填充0                                                             │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 示例：设置零位角度为0度（成功）
 * 发送包：AA 08 00 00 00 00 00 00 00 00 00 00 B8 55  （设置零位=0度）
 * 应答包：AA 08 00 00 00 00 00 00 00 00 00 00 B9 55  （应答：RESPONSE_OK=0，当前零位=0度）
 * 
 * 示例：设置零位角度为90度（成功）
 * 发送包：AA 08 5A 00 00 00 00 00 00 00 00 00 12 55  （设置零位=90度）
 * 应答包：AA 08 00 5A 00 00 00 00 00 00 00 00 1B 55  （应答：RESPONSE_OK=0，当前零位=90度）
 * 
 * 示例：设置零位失败（零位设置失败）
 * 发送包：AA 08 00 00 00 00 00 00 00 00 00 00 B8 55  （设置零位=0度）
 * 应答包：AA 08 06 00 00 00 00 00 00 00 00 00 BE 55  （应答：RESPONSE_ZERO_SET_FAILED=6，设置失败）
 *
 * @brief 状态上报命令（CMD_STATUS_REPORT = 0x09）
 * 
 * 发送包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x09 │ 命令字：状态上报                                                       │
 * │2-11 │0x00 │ 10字节填充0（无有效数据）                                              │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 状态上报应答包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x09 │ 命令字：与发送包相同（0x09）                                           │
 * │2-3  │Iu   │ 2字节整型U相电流值（小端格式，单位：mA，int16_t）                        │
 * │4-5  │Iv   │ 2字节整型V相电流值（小端格式，单位：mA，int16_t）                        │
 * │6-7  │Iw   │ 2字节整型W相电流值（小端格式，单位：mA，int16_t）                        │
 * │8-9  │V    │ 2字节整型速度值（小端格式，单位：RPM，int16_t）                          │
 * │10-11│P    │ 2字节整型位置值（小端格式，单位：0.1度，int16_t）                          │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 示例：电机工作状态正常上报
 * 发送包：AA 09 00 00 00 00 00 00 00 00 00 00 B3 55  （查询状态）
 * 应答包：AA 09 50 46 50 46 50 46 00 00 00 00 45 55  （U/V/W相电流：18000mA，速度：0RPM，位置：0度）
 *
 * @brief 力矩控制命令（CMD_TORQUE_CONTROL = 0x0A）
 * 
 * 发送包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x0A │ 命令字：力矩控制                                                       │
 * │2-3  │I    │ 2字节整型电流值（小端格式，单位：mA）                                  │
 * │4-11 │0x00 │ 8字节填充0                                                             │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 力矩控制应答包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x0A │ 命令字：与发送包相同（0x0A）                                           │
 * │2-3  │I    │ 2字节整型电流值（小端格式，单位：mA）                                  │
 * │4-5  │V    │ 2字节整型速度值（小端格式，单位：RPM）                                  │
 * │6-7  │P    │ 2字节整型位置值（小端格式，单位：0.1度）                                │
 * │8-11 │S    │ 4字节电机状态字（MotorState枚举值，小端格式）                          │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 示例：设置力矩电流为5000mA
 * 发送包：AA 0A 88 13 00 00 00 00 00 00 00 00 4F 55  （设置电流：5000mA）
 * 应答包：AA 0A 88 13 00 00 00 00 02 00 00 00 52 55  （电流：5000mA，速度：0RPM，位置：0度，状态：MOTOR_STATE_WORKING）
 * 
 * 示例：设置力矩电流为10000mA
 * 发送包：AA 0A 10 27 00 00 00 00 00 00 00 00 41 55  （设置电流：10000mA）
 * 应答包：AA 0A 10 27 00 00 00 00 02 00 00 00 44 55  （电流：10000mA，速度：0RPM，位置：0度，状态：MOTOR_STATE_WORKING）
 *
 * @brief 速度控制命令（CMD_SPEED_CONTROL = 0x0B）
 * 
 * 发送包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x0B │ 命令字：速度控制                                                       │
 * │2-3  │V    │ 2字节整型速度值（小端格式，单位：RPM）                                 │
 * │4-11 │0x00 │ 8字节填充0                                                             │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 速度控制应答包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x0B │ 命令字：与发送包相同（0x0B）                                           │
 * │2-3  │I    │ 2字节整型电流值（小端格式，单位：mA）                                  │
 * │4-5  │V    │ 2字节整型速度值（小端格式，单位：RPM）                                  │
 * │6-7  │P    │ 2字节整型位置值（小端格式，单位：0.1度）                                │
 * │8-11 │S    │ 4字节电机状态字（MotorState枚举值，小端格式）                          │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 示例：设置速度为1500RPM
 * 发送包：AA 0B DC 05 00 00 00 00 00 00 00 00 96 55  （设置速度：1500RPM）
 * 应答包：AA 0B 88 13 DC 05 00 00 02 00 00 00 A6 55  （电流：5000mA，速度：1500RPM，位置：0度，状态：MOTOR_STATE_WORKING）
 * 
 * 示例：设置速度为3000RPM
 * 发送包：AA 0B B8 0B 00 00 00 00 00 00 00 00 11 55  （设置速度：3000RPM）
 * 应答包：AA 0B 20 4E B8 0B 00 00 02 00 00 00 31 55  （电流：20000mA，速度：3000RPM，位置：0度，状态：MOTOR_STATE_WORKING）
 *
 * @brief 位置控制命令（CMD_POSITION_CONTROL = 0x0C）
 * 
 * 发送包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x0C │ 命令字：位置控制                                                       │
 * │2-3  │P    │ 2字节整型位置值（小端格式，单位：0.1度）                               │
 * │4-11 │0x00 │ 8字节填充0                                                             │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 位置控制应答包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x0C │ 命令字：与发送包相同（0x0C）                                           │
 * │2-3  │I    │ 2字节整型电流值（小端格式，单位：mA）                                  │
 * │4-5  │V    │ 2字节整型速度值（小端格式，单位：RPM）                                  │
 * │6-7  │P    │ 2字节整型位置值（小端格式，单位：0.1度）                                │
 * │8-11 │S    │ 4字节电机状态字（MotorState枚举值，小端格式）                          │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 示例：设置位置为1800度（180度）
 * 发送包：AA 0C 10 07 00 00 00 00 00 00 00 00 CD 55  （设置位置：180度）
 * 应答包：AA 0C 88 13 00 00 10 07 02 00 00 00 E5 55  （电流：5000mA，速度：0RPM，位置：180度，状态：MOTOR_STATE_WORKING）
 * 
 * 示例：设置位置为3600度（360度）
 * 发送包：AA 0C E0 0E 00 00 00 00 00 00 00 00 7D 55  （设置位置：360度）
 * 应答包：AA 0C 20 4E 00 00 E0 0E 02 00 00 00 95 55  （电流：20000mA，速度：0RPM，位置：360度，状态：MOTOR_STATE_WORKING）
 *
 * @brief 设置当前角度为零位命令（CMD_ZERO_SET_CURRENT = 0x0E）
 * 
 * 发送包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x0E │ 命令字：设置当前角度为零位                                             │
 * │2-11 │0x00 │ 10字节填充0（发送数据全为0）                                          │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 设置当前角度为零位应答包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x0E │ 命令字：与发送包相同（0x0E）                                           │
 * │ 2   │S    │ 1字节应答状态（ResponseStatus枚举值）                                  │
 * │3-4  │P    │ 2字节整型零位角度值（小端格式，单位：0.1度）                            │
 * │5-11 │0x00 │ 7字节填充0                                                             │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 示例：设置当前角度为零位（成功）
 * 发送包：AA 0E 00 00 00 00 00 00 00 00 00 00 58 55  （设置当前角度为零位）
 * 应答包：AA 0E 00 5A 00 00 00 00 00 00 00 00 69 55  （应答：RESPONSE_OK=0，当前零位=90度）
 * 
 * 示例：设置当前角度为零位失败
 * 发送包：AA 0E 00 00 00 00 00 00 00 00 00 00 58 55  （设置当前角度为零位）
 * 应答包：AA 0E 06 00 00 00 00 00 00 00 00 00 6F 55  （应答：RESPONSE_ZERO_SET_FAILED=6，设置失败）
 *
 * @brief 运动控制命令（CMD_MOTION_CONTROL = 0x0D）
 * 
 * 发送包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x0D │ 命令字：运控控制                                                       │
 * │2-3  │I    │ 2字节整型电流值（小端格式，单位：mA）                                  │
 * │4-5  │V    │ 2字节整型速度值（小端格式，单位：RPM）                                  │
 * │6-7  │P    │ 2字节整型位置值（小端格式，单位：0.1度）                                │
 * │8-9  │Kp   │ 2字节整型Kp值（小端格式，单位：0.01）                                   │
 * │10-11│Kd   │ 2字节整型Kd值（小端格式，单位：0.01）                                   │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 运控控制应答包格式：
 * ┌─────┬─────┬─────────────────────────────────────────────────────────────────────────┐
 * │字节 │值   │                           说明                                        │
 * ├─────┼─────┼─────────────────────────────────────────────────────────────────────────┤
 * │ 0   │0xAA │ 包头固定值                                                             │
 * │ 1   │0x0D │ 命令字：与发送包相同（0x0D）                                           │
 * │2-3  │I    │ 2字节整型电流值（小端格式，单位：mA）                                  │
 * │4-5  │V    │ 2字节整型速度值（小端格式，单位：RPM）                                  │
 * │6-7  │P    │ 2字节整型位置值（小端格式，单位：0.1度）                                │
 * │8-11 │S    │ 4字节电机状态字（MotorState枚举值，小端格式）                          │
 * │ 12  │CHK  │ 校验和：从字节0到字节11的累加和                                       │
 * │ 13  │0x55 │ 包尾固定值                                                             │
 * └─────┴─────┴─────────────────────────────────────────────────────────────────────────┘
 * 
 * 示例：设置运控参数（电流5000mA，速度1000RPM，位置180度，Kp=10.0，Kd=5.0）
 * 发送包：AA 0D 88 13 E8 03 10 07 3C 00 FA 00 04 55  （电流：5000mA，速度：1000RPM，位置：180度，Kp：10.0，Kd：5.0）
 * 应答包：AA 0D 88 13 E8 03 10 07 02 00 00 00 07 55  （电流：5000mA，速度：1000RPM，位置：180度，状态：MOTOR_STATE_WORKING）
 * 
 * 示例：设置运控参数（电流10000mA，速度2000RPM，位置360度，Kp=20.0，Kd=10.0）
 * 发送包：AA 0D 10 27 D0 07 E0 0E 7D 00 C8 00 00 55  （电流：10000mA，速度：2000RPM，位置：360度，Kp：20.0，Kd：10.0）
 * 应答包：AA 0D 10 27 D0 07 E0 0E 02 00 00 00 03 55  （电流：10000mA，速度：2000RPM，位置：360度，状态：MOTOR_STATE_WORKING）
 *
 *
 * 应答规则：
 * 1. 所有应答包的命令字与发送包相同
 * 2. 数据采用小端格式（低位在前）
 * 3. 浮点数数据按IEEE 754单精度格式传输
*/

// 协议帧定义
#define PROTOCOL_HEADER 0xAA    // 包头
#define PROTOCOL_FOOTER 0x55    // 包尾
#define PROTOCOL_LENGTH 14      // 固定包长

// 命令类型枚举
typedef enum {
    CMD_WRITE_DATA = 0x01,       // 写数据
    CMD_READ_DATA,              // 读数据
    CMD_MOTOR_START,            // 启动电机
    CMD_MOTOR_STOP,             // 停止电机
    CMD_MODE_SET,               // 模式设置
    CMD_INTERFACE_MODE_SET,     // 接口模式设置
    CMD_CANID_SET,              // CANID设置
    CMD_ZERO_SET,               // 0位设置
    CMD_STATUS_REPORT,          // 状态上报
    CMD_TORQUE_CONTROL,         // 力矩控制
    CMD_SPEED_CONTROL,          // 速度控制
    CMD_POSITION_CONTROL,       // 位置控制
    CMD_MOTION_CONTROL,         // 运控控制
    CMD_ZERO_SET_CURRENT,        // 设置当前角度为机械0位
    CMD_MOTOR_CALIBRATE        // 电机校准
} motor_command_t;

// 数据ID枚举（可读写的数据标识）
typedef enum {
    DATA_ID_PHASE_CURRENT_U_TARGET = 0x10,     // U相电流目标值
    DATA_ID_PHASE_CURRENT_U_CURRENT,           // U相电流当前值
    DATA_ID_PHASE_CURRENT_V_TARGET,            // V相电流目标值
    DATA_ID_PHASE_CURRENT_V_CURRENT,           // V相电流当前值
    DATA_ID_PHASE_CURRENT_W_TARGET,            // W相电流目标值
    DATA_ID_PHASE_CURRENT_W_CURRENT,           // W相电流当前值
    DATA_ID_SPEED_TARGET,                      // 转速目标值
    DATA_ID_SPEED_CURRENT,                     // 转速当前值
    DATA_ID_Q_VOLTAGE_TARGET,                  // Q轴电压目标值
    DATA_ID_Q_VOLTAGE_CURRENT,                 // Q轴电压当前值
    DATA_ID_D_VOLTAGE_TARGET,                  // D轴电压目标值
    DATA_ID_D_VOLTAGE_CURRENT,                 // D轴电压当前值
    DATA_ID_MAX_CURRENT_LIMIT,                 // 最大电流限制
    DATA_ID_BUS_VOLTAGE,                       // 电机母线电压
    DATA_ID_POLE_PAIRS,                        // 电机极对数
    DATA_ID_ELECTRICAL_ANGLE_TARGET,           // 电角度目标值
    DATA_ID_ELECTRICAL_ANGLE_CURRENT,          // 电角度当前值
    DATA_ID_MECHANICAL_ANGLE_TARGET,           // 机械角度目标值
    DATA_ID_MECHANICAL_ANGLE_CURRENT,          // 机械角度当前值
    DATA_ID_CONTROL_MODE,                      // 控制模式
    DATA_ID_INTERFACE_MODE,                    // 接口模式
    DATA_ID_MOTOR_STATE,                       // 工作状态
    DATA_ID_TORQUE_PID_KP,                     // 力矩环PID Kp参数
    DATA_ID_TORQUE_PID_KI,                     // 力矩环PID Ki参数
    DATA_ID_TORQUE_PID_KD,                     // 力矩环PID Kd参数
    DATA_ID_SPEED_PID_KP,                      // 速度环PID Kp参数
    DATA_ID_SPEED_PID_KI,                      // 速度环PID Ki参数
    DATA_ID_SPEED_PID_KD,                      // 速度环PID Kd参数
    DATA_ID_POSITION_PID_KP,                   // 位置环PID Kp参数
    DATA_ID_POSITION_PID_KI,                   // 位置环PID Ki参数
    DATA_ID_POSITION_PID_KD,                   // 位置环PID Kd参数
    DATA_ID_TORQUE_LOOP_EXECUTION_TIME,        // 电流环执行时间
    DATA_ID_CAN_ID,                            // CAN ID号
    DATA_ID_MECHANICAL_ZERO_POSITION,         // 机械零位角度
    DATA_ID_HALL_X_DC_OFFSET,                  // 霍尔X轴直流偏移
    DATA_ID_HALL_Y_DC_OFFSET,                  // 霍尔Y轴直流偏移
    DATA_ID_HALL_CALIBRATION_STATUS,           // 霍尔校准状态
    DATA_ID_SPEED_LOOP_EXECUTION_TIME,         // 速度环执行时间
    DATA_ID_POSITION_LOOP_EXECUTION_TIME,      // 位置环执行时间
} motor_data_id_t;

typedef enum {
    MOTOR_MODE_TORQUE = 0,    // 力矩模式
    MOTOR_MODE_SPEED,         // 速度模式
    MOTOR_MODE_POSITION,      // 位置模式
    MOTOR_MODE_MOTION         // 运控模式
} MotorControlMode;

// 应答状态枚举
typedef enum {
    RESPONSE_OK = 0,            // 无异常
    RESPONSE_INVALID_CANID,   // 无效的CANID
    RESPONSE_MODE_SET_FAILED,   // 模式设置失败
    RESPONSE_INTERFACE_SET_FAILED,  // 接口设置失败
    RESPONSE_MOTOR_START_FAILED,    // 启动电机失败
    RESPONSE_MOTOR_STOP_FAILED,     // 停止电机失败
    RESPONSE_ZERO_SET_FAILED        // 0位设置失败
} ResponseStatus;

// 电机工作状态枚举
typedef enum {
    MOTOR_STATE_IDLE = 0,     // 未工作状态
    MOTOR_STATE_CALIBRATING,  // 校准状态
    MOTOR_STATE_WORKING       // 工作状态
} MotorState;

#ifdef __cplusplus
}
#endif

#endif